name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  FLUTTER_VERSION: '3.10.0'

jobs:
  # Backend Tests
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sikhiya_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run linting
      working-directory: ./backend
      run: npm run lint

    - name: Run type checking
      working-directory: ./backend
      run: npm run build

    - name: Run tests
      working-directory: ./backend
      run: npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/sikhiya_test
        JWT_SECRET: test-secret
        NODE_ENV: test

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./backend/coverage
        flags: backend

  # Flutter Tests
  flutter-test:
    name: Flutter Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true

    - name: Get dependencies
      working-directory: ./mobile
      run: flutter pub get

    - name: Verify formatting
      working-directory: ./mobile
      run: flutter format --output=none --set-exit-if-changed .

    - name: Analyze project source
      working-directory: ./mobile
      run: flutter analyze --fatal-infos

    - name: Generate code
      working-directory: ./mobile
      run: flutter pub run build_runner build --delete-conflicting-outputs

    - name: Run tests
      working-directory: ./mobile
      run: flutter test --coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./mobile/coverage
        flags: mobile

  # Build and Deploy (on main branch)
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [backend-test, flutter-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true

    - name: Build backend
      working-directory: ./backend
      run: |
        npm ci --only=production
        npm run build

    - name: Build mobile web
      working-directory: ./mobile
      run: |
        flutter pub get
        flutter pub run build_runner build --delete-conflicting-outputs
        flutter build web --release

    - name: Build mobile APK
      working-directory: ./mobile
      run: flutter build apk --release

    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: production-build
        path: |
          backend/dist/
          mobile/build/web/
          mobile/build/app/outputs/flutter-apk/app-release.apk

  # Security Scan
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [backend-test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --file=backend/package.json --severity-threshold=high

    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: snyk.sarif